{"version":3,"sources":["api/fetchWeather.tsx","components/WeatherMode.tsx","App.tsx","index.tsx"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","WeatherModal","className","name","sys","country","alt","src","Math","round","main","temp","App","input","React","useRef","useState","setQuery","setData","setName","useEffect","alert","ref","type","placeholder","value","onChange","e","target","onKeyPress","key","then","arg","current","blur","Application","ReactDom","render","document","getElementById"],"mappings":"kNAKMA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACGC,IAAMC,IAJd,kDAI2B,CACzCC,OAAQ,CACPC,EAAGL,EACHM,MAAO,SACPC,MAPa,sCAEK,uBACZC,EADY,EACZA,KADY,kBASbA,GATa,2CAAH,sDAYHT,I,OCSAU,EAnBuB,SAAC,GAAoB,EAAlBT,MAAmB,IAAZQ,EAAW,EAAXA,KAE/C,OACC,mCACEA,GAAQ,0BAASE,UAAU,gBAAnB,UACR,qBAAKA,UAAU,SAAf,SACC,+BAAKF,EAAKG,KAAV,KAAkBH,EAAKI,IAAIC,QAA3B,SAED,qBAAKH,UAAU,OAAf,SACC,qBAAKI,IAAI,aAAaC,IAAI,oCAAoCL,UAAU,WAEzE,qBAAKA,UAAU,OAAf,SACC,+BAAKM,KAAKC,MAAMT,EAAKU,KAAKC,MAA1B,oBC0BUC,EAzCO,WACrB,IAAMC,EAAQC,IAAMC,OAAY,MAChC,EAA0BC,mBAAiB,IAA3C,mBAAOxB,EAAP,KAAcyB,EAAd,KACA,EAAwBD,qBAAxB,mBAAOhB,EAAP,KAAakB,EAAb,KACA,EAAwBF,mBAAiB,IAAzC,mBAAOb,EAAP,KAAagB,EAAb,KAiBA,OAJAL,IAAMM,WAAU,WACfC,UACE,CAACrB,IAGH,mCACC,0BAASE,UAAU,eAAnB,UACC,qBAAKA,UAAU,UAAf,SACC,uBACCoB,IAAKT,EACLU,KAAK,SACLC,YAAY,YACZtB,UAAU,SACVuB,MAAOjC,EACPkC,SAAU,SAAAC,GAAC,OAAIV,EAASU,EAAEC,OAAOH,QACjCI,WA1BU,SAACF,GACD,UAAVA,EAAEG,KACLvC,EAAaC,GAAOuC,MAAK,SAAAC,GACxBf,EAAS,IACTC,EAAQc,GACRb,EAAQ3B,GACRqB,EAAMoB,QAAQC,eAuBd,cAAC,EAAD,CAAc1C,MAAOW,EAAMH,KAAMA,UCjC/BmC,G,MAAwB,WAC7B,OACC,mCACC,cAAC,EAAD,QAKHC,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.c7543208.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst API_URL = \"https://api.openweathermap.org/data/2.5/weather\"\r\nconst API_KEY = \"f33a484cf794d08d0148764789aaba32\"\r\n\r\nconst fetchWeather = async (query: any) => {\r\n const { data } = await axios.get(API_URL, {\r\n  params: {\r\n   q: query,\r\n   units: \"metric\",\r\n   APPID: API_KEY\r\n  }\r\n })\r\n\r\n return data\r\n}\r\n\r\nexport default fetchWeather","import React from \"react\"\r\n\r\ninterface Props {\r\n query: string,\r\n data: any\r\n}\r\n\r\nconst WeatherModal: React.FC<Props> = ({ query, data }) => {\r\n\r\n return (\r\n  <>\r\n   {data && <section className=\"modal-section\">\r\n    <div className=\"header\">\r\n     <h1>{data.name} ({data.sys.country})</h1>\r\n    </div>\r\n    <div className=\"logo\">\r\n     <img alt=\"background\" src=\"https://i.ibb.co/47YYfy7/logo.png\" className=\"icon\" />\r\n    </div>\r\n    <div className=\"temp\">\r\n     <h1>{Math.round(data.main.temp)} CÂ°</h1>\r\n    </div>\r\n   </section>}\r\n  </>\r\n )\r\n}\r\n\r\nexport default WeatherModal","import React, { useState } from \"react\"\r\nimport fetchWeather from \"./api/fetchWeather\"\r\nimport WeatherModal from \"./components/WeatherMode\"\r\n\r\nconst App: React.FC = () => {\r\n const input = React.useRef<any>(null)\r\n const [query, setQuery] = useState<string>(\"\")\r\n const [data, setData] = useState<any>()\r\n const [name, setName] = useState<string>(\"\")\r\n\r\n const search = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n  if (e.key === \"Enter\") {\r\n   fetchWeather(query).then(arg => {\r\n    setQuery(\"\")\r\n    setData(arg)\r\n    setName(query)\r\n    input.current.blur()\r\n   })\r\n  }\r\n }\r\n\r\n React.useEffect(() => {\r\n  alert()\r\n }, [data])\r\n\r\n return (\r\n  <>\r\n   <section className=\"main-section\">\r\n    <div className=\"content\">\r\n     <input\r\n      ref={input}\r\n      type=\"search\"\r\n      placeholder=\"Search...\"\r\n      className=\"search\"\r\n      value={query}\r\n      onChange={e => setQuery(e.target.value)}\r\n      onKeyPress={search}\r\n     />\r\n    </div>\r\n    <WeatherModal query={name} data={data} />\r\n   </section>\r\n  </>\r\n )\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDom from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nimport \"./styles/styl/style.css\"\r\n\r\nconst Application: React.FC = () => {\r\n return (\r\n  <>\r\n   <App />\r\n  </>\r\n )\r\n}\r\n\r\nReactDom.render(<Application />, document.getElementById(\"root\"))"],"sourceRoot":""}